#lang planet neil/sicp
(define (square x) (* x x))
(define (abs x)
  (cond ((< x 0) (- x))
        (else x)))
(define (>= x y)
  (or (> x y) (= x y)))
(define (a-plus-abs-b a b)
  ((if (> b 0) + -) a b))
(define (sqrt-iter guess x)
  (if (good-enough? guess x)
      guess
      (sqrt-iter (improve guess x) x)))
(define (improve guess x)
  (average guess (/ x guess)))
(define (average x y)
  (/ (+ x y) 2))
(define (good-enough? guess x)
  (< (abs (- (square guess) x)) 0.001))
(define (sqrt x)
  (sqrt-iter 1.0 x))
